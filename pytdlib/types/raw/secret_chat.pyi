from .object_base import ObjectBase
from .secret_chat_state import SecretChatState

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class SecretChat(ObjectBase):
    """
    Represents a secret chat

    :param id: Secret chat identifier
    :param user_id: Identifier of the chat partner
    :param state: State of the secret chat
    :param is_outbound: True, if the chat was created by the current user; false otherwise
    :param key_hash: Hash of the currently used key for comparison with the hash of the chat partner's key. This is a string of 36 little-endian bytes, which must be split into groups of 2 bits, each denoting a pixel of one of 4 colors FFFFFF, D5E6F3, 2D5775, and 2F99C9. The pixels must be used to make a 12x12 square image filled from left to right, top to bottom. Alternatively, the first 32 bytes of the hash can be converted to the hexadecimal format and printed as 32 2-digit hex numbers
    :param layer: Secret chat layer; determines features supported by the chat partner's application. Nested text entities and underline and strikethrough entities are supported if the layer >= 101, files bigger than 2000MB are supported if the layer >= 143, spoiler and custom emoji text entities are supported if the layer >= 144
    """
    __slots__ = ("id", "user_id", "state", "is_outbound", "key_hash", "layer", "_extra", "_client_id", "_type")

    def __init__(self, id: int = 0, user_id: int = 0, state: SecretChatState | None = None, is_outbound: bool = False, key_hash: bytes = b"", layer: int = 0):
        self.id = id
        self.user_id = user_id
        self.state = state
        self.is_outbound = is_outbound
        self.key_hash = key_hash
        self.layer = layer
        self._type = "secretChat"