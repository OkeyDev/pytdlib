from .input_message_content import InputMessageContent

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class InputMessagePhoto(InputMessageContent):
    """
    A photo message

    :param photo: Photo to send. The photo must be at most 10 MB in size. The photo's width and height must not exceed 10000 in total. Width and height ratio must be at most 20
    :param thumbnail: Photo thumbnail to be sent; pass null to skip thumbnail uploading. The thumbnail is sent to the other party only in secret chats
    :param added_sticker_file_ids: File identifiers of the stickers added to the photo, if applicable
    :param width: Photo width
    :param height: Photo height
    :param caption: Photo caption; pass null to use an empty caption; 0-getOption("message_caption_length_max") characters
    :param show_caption_above_media: True, if the caption must be shown above the photo; otherwise, the caption must be shown below the photo; not supported in secret chats
    :param self_destruct_type: Photo self-destruct type; pass null if none; private chats only
    :param has_spoiler: True, if the photo preview must be covered by a spoiler animation; not supported in secret chats
    """
    __slots__ = ("photo", "thumbnail", "added_sticker_file_ids", "width", "height", "caption", "show_caption_above_media", "self_destruct_type", "has_spoiler", "_extra", "_client_id", "_type")

    def __init__(self, photo = None, thumbnail = None, added_sticker_file_ids = None, width = None, height = None, caption = None, show_caption_above_media = None, self_destruct_type = None, has_spoiler = None):
        self.photo = photo
        self.thumbnail = thumbnail
        self.added_sticker_file_ids = added_sticker_file_ids
        self.width = width
        self.height = height
        self.caption = caption
        self.show_caption_above_media = show_caption_above_media
        self.self_destruct_type = self_destruct_type
        self.has_spoiler = has_spoiler
        self._type = "inputMessagePhoto"