from .function import Function

from .report_chat_result_messages_required import ReportChatResultMessagesRequired
from .report_chat_result_ok import ReportChatResultOk
from .report_chat_result_option_required import ReportChatResultOptionRequired
from .report_chat_result_text_required import ReportChatResultTextRequired
from typing import List

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class ReportChat(Function[ReportChatResultOk | ReportChatResultOptionRequired | ReportChatResultTextRequired | ReportChatResultMessagesRequired]):
    """
    Reports a chat to the Telegram moderators. A chat can be reported only from the chat action bar, or if chat.can_be_reported

    :param chat_id: Chat identifier
    :param option_id: Option identifier chosen by the user; leave empty for the initial request
    :param message_ids: Identifiers of reported messages. Use messageProperties.can_report_chat to check whether the message can be reported
    :param text: Additional report details if asked by the server; 0-1024 characters; leave empty for the initial request
    :return: :class:`ReportChatResultOk | ReportChatResultOptionRequired | ReportChatResultTextRequired | ReportChatResultMessagesRequired`
    """
    __slots__ = ("chat_id", "option_id", "message_ids", "text", "_extra", "_client_id", "_type")

    def __init__(self, chat_id: int = 0, option_id: bytes = b"", message_ids: List[int] | None = None, text: str = ""):
        self.chat_id = chat_id
        self.option_id = option_id
        self.message_ids = message_ids
        self.text = text
        self._type = "reportChat"