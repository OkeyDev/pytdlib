from .function import Function

from .sticker_type import StickerType
from .trending_sticker_sets import TrendingStickerSets

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class GetTrendingStickerSets(Function[TrendingStickerSets]):
    """
    Returns a list of trending sticker sets. For optimal performance, the number of returned sticker sets is chosen by TDLib

    :param sticker_type: Type of the sticker sets to return
    :param offset: The offset from which to return the sticker sets; must be non-negative
    :param limit: The maximum number of sticker sets to be returned; up to 100. For optimal performance, the number of returned sticker sets is chosen by TDLib and can be smaller than the specified limit, even if the end of the list has not been reached
    :return: :class:`TrendingStickerSets`
    """
    __slots__ = ("sticker_type", "offset", "limit", "_extra", "_client_id", "_type")

    def __init__(self, sticker_type: StickerType | None = None, offset: int = 0, limit: int = 0):
        self.sticker_type = sticker_type
        self.offset = offset
        self.limit = limit
        self._type = "getTrendingStickerSets"