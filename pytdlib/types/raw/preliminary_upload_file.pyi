from .function import Function

from .file import File
from .file_type import FileType
from .input_file import InputFile

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class PreliminaryUploadFile(Function[File]):
    """
    Preliminary uploads a file to the cloud before sending it in a message, which can be useful for uploading of being recorded voice and video notes. In all other cases there is no need to preliminary upload a file. Updates updateFile will be used to notify about upload progress. The upload will not be completed until the file is sent in a message

    :param file: File to upload
    :param file_type: File type; pass null if unknown
    :param priority: Priority of the upload (1-32). The higher the priority, the earlier the file will be uploaded. If the priorities of two files are equal, then the first one for which preliminaryUploadFile was called will be uploaded first
    :return: :class:`File`
    """
    __slots__ = ("file", "file_type", "priority", "_extra", "_client_id", "_type")

    def __init__(self, file: InputFile | None = None, file_type: FileType | None = None, priority: int = 0):
        self.file = file
        self.file_type = file_type
        self.priority = priority
        self._type = "preliminaryUploadFile"