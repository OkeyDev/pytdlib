from .chat_administrator_rights import ChatAdministratorRights
from .keyboard_button_type import KeyboardButtonType

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class KeyboardButtonTypeRequestChat(KeyboardButtonType):
    """
    A button that requests a chat to be shared by the current user; available only in private chats. Use the method shareChatWithBot to complete the request

    :param id: Unique button identifier
    :param chat_is_channel: True, if the chat must be a channel; otherwise, a basic group or a supergroup chat is shared
    :param restrict_chat_is_forum: True, if the chat must or must not be a forum supergroup
    :param chat_is_forum: True, if the chat must be a forum supergroup; otherwise, the chat must not be a forum supergroup. Ignored if restrict_chat_is_forum is false
    :param restrict_chat_has_username: True, if the chat must or must not have a username
    :param chat_has_username: True, if the chat must have a username; otherwise, the chat must not have a username. Ignored if restrict_chat_has_username is false
    :param chat_is_created: True, if the chat must be created by the current user
    :param user_administrator_rights: Expected user administrator rights in the chat; may be null if they aren't restricted
    :param bot_administrator_rights: Expected bot administrator rights in the chat; may be null if they aren't restricted
    :param bot_is_member: True, if the bot must be a member of the chat; for basic group and supergroup chats only
    :param request_title: Pass true to request title of the chat; bots only
    :param request_username: Pass true to request username of the chat; bots only
    :param request_photo: Pass true to request photo of the chat; bots only
    """
    __slots__ = ("id", "chat_is_channel", "restrict_chat_is_forum", "chat_is_forum", "restrict_chat_has_username", "chat_has_username", "chat_is_created", "user_administrator_rights", "bot_administrator_rights", "bot_is_member", "request_title", "request_username", "request_photo", "_extra", "_client_id", "_type")

    def __init__(self, id: int = 0, chat_is_channel: bool = False, restrict_chat_is_forum: bool = False, chat_is_forum: bool = False, restrict_chat_has_username: bool = False, chat_has_username: bool = False, chat_is_created: bool = False, user_administrator_rights: ChatAdministratorRights | None = None, bot_administrator_rights: ChatAdministratorRights | None = None, bot_is_member: bool = False, request_title: bool = False, request_username: bool = False, request_photo: bool = False):
        self.id = id
        self.chat_is_channel = chat_is_channel
        self.restrict_chat_is_forum = restrict_chat_is_forum
        self.chat_is_forum = chat_is_forum
        self.restrict_chat_has_username = restrict_chat_has_username
        self.chat_has_username = chat_has_username
        self.chat_is_created = chat_is_created
        self.user_administrator_rights = user_administrator_rights
        self.bot_administrator_rights = bot_administrator_rights
        self.bot_is_member = bot_is_member
        self.request_title = request_title
        self.request_username = request_username
        self.request_photo = request_photo
        self._type = "keyboardButtonTypeRequestChat"