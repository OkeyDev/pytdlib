from .function import Function

from .json_value_array import JsonValueArray
from .json_value_boolean import JsonValueBoolean
from .json_value_null import JsonValueNull
from .json_value_number import JsonValueNumber
from .json_value_object import JsonValueObject
from .json_value_string import JsonValueString

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class GetJsonValue(Function[JsonValueNull | JsonValueBoolean | JsonValueNumber | JsonValueString | JsonValueArray | JsonValueObject]):
    """
    Converts a JSON-serialized string to corresponding JsonValue object. Can be called synchronously

    :param json: The JSON-serialized string
    :return: :class:`JsonValueNull | JsonValueBoolean | JsonValueNumber | JsonValueString | JsonValueArray | JsonValueObject`
    """
    __slots__ = ("json", "_extra", "_client_id", "_type")

    def __init__(self, json: str = ""):
        self.json = json
        self._type = "getJsonValue"