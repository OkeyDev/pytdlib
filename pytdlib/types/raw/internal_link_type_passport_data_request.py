from .internal_link_type import InternalLinkType

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class InternalLinkTypePassportDataRequest(InternalLinkType):
    """
    The link contains a request of Telegram passport data. Call getPassportAuthorizationForm with the given parameters to process the link if the link was received from outside of the application; otherwise, ignore it

    :param bot_user_id: User identifier of the service's bot; the corresponding user may be unknown yet
    :param scope: Telegram Passport element types requested by the service
    :param public_key: Service's public key
    :param nonce: Unique request identifier provided by the service
    :param callback_url: An HTTP URL to open once the request is finished, canceled, or failed with the parameters tg_passport=success, tg_passport=cancel, or tg_passport=error&error=... respectively. If empty, then onActivityResult method must be used to return response on Android, or the link tgbot{bot_user_id}://passport/success or tgbot{bot_user_id}://passport/cancel must be opened otherwise
    """
    __slots__ = ("bot_user_id", "scope", "public_key", "nonce", "callback_url", "_extra", "_client_id", "_type")

    def __init__(self, bot_user_id = None, scope = None, public_key = None, nonce = None, callback_url = None):
        self.bot_user_id = bot_user_id
        self.scope = scope
        self.public_key = public_key
        self.nonce = nonce
        self.callback_url = callback_url
        self._type = "internalLinkTypePassportDataRequest"