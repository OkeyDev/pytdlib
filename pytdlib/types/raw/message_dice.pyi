from .dice_stickers import DiceStickers
from .message_content import MessageContent

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class MessageDice(MessageContent):
    """
    A dice message. The dice value is randomly generated by the server

    :param initial_state: The animated stickers with the initial dice animation; may be null if unknown. The update updateMessageContent will be sent when the sticker became known
    :param final_state: The animated stickers with the final dice animation; may be null if unknown. The update updateMessageContent will be sent when the sticker became known
    :param emoji: Emoji on which the dice throw animation is based
    :param value: The dice value. If the value is 0, the dice don't have final state yet
    :param success_animation_frame_number: Number of frame after which a success animation like a shower of confetti needs to be shown on updateMessageSendSucceeded
    """
    __slots__ = ("initial_state", "final_state", "emoji", "value", "success_animation_frame_number", "_extra", "_client_id", "_type")

    def __init__(self, initial_state: DiceStickers | None = None, final_state: DiceStickers | None = None, emoji: str = "", value: int = 0, success_animation_frame_number: int = 0):
        self.initial_state = initial_state
        self.final_state = final_state
        self.emoji = emoji
        self.value = value
        self.success_animation_frame_number = success_animation_frame_number
        self._type = "messageDice"