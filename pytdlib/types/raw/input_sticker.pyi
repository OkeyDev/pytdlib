from .input_file import InputFile
from .mask_position import MaskPosition
from .object_base import ObjectBase
from .sticker_format import StickerFormat
from typing import List

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class InputSticker(ObjectBase):
    """
    A sticker to be added to a sticker set

    :param sticker: File with the sticker; must fit in a 512x512 square. For WEBP stickers the file must be in WEBP or PNG format, which will be converted to WEBP server-side. See https://core.telegram.org/animated_stickers#technical-requirements for technical requirements
    :param format: Format of the sticker
    :param emojis: String with 1-20 emoji corresponding to the sticker
    :param mask_position: Position where the mask is placed; pass null if not specified
    :param keywords: List of up to 20 keywords with total length up to 64 characters, which can be used to find the sticker
    """
    __slots__ = ("sticker", "format", "emojis", "mask_position", "keywords", "_extra", "_client_id", "_type")

    def __init__(self, sticker: InputFile | None = None, format: StickerFormat | None = None, emojis: str = "", mask_position: MaskPosition | None = None, keywords: List[str] | None = None):
        self.sticker = sticker
        self.format = format
        self.emojis = emojis
        self.mask_position = mask_position
        self.keywords = keywords
        self._type = "inputSticker"