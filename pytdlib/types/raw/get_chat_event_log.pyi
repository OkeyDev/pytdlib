from .function import Function

from .chat_event_log_filters import ChatEventLogFilters
from .chat_events import ChatEvents
from typing import List

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class GetChatEventLog(Function[ChatEvents]):
    """
    Returns a list of service actions taken by chat members and administrators in the last 48 hours. Available only for supergroups and channels. Requires administrator rights. Returns results in reverse chronological order (i.e., in order of decreasing event_id)

    :param chat_id: Chat identifier
    :param query: Search query by which to filter events
    :param from_event_id: Identifier of an event from which to return results. Use 0 to get results from the latest events
    :param limit: The maximum number of events to return; up to 100
    :param filters: The types of events to return; pass null to get chat events of all types
    :param user_ids: User identifiers by which to filter events. By default, events relating to all users will be returned
    :return: :class:`ChatEvents`
    """
    __slots__ = ("chat_id", "query", "from_event_id", "limit", "filters", "user_ids", "_extra", "_client_id", "_type")

    def __init__(self, chat_id: int = 0, query: str = "", from_event_id: int = 0, limit: int = 0, filters: ChatEventLogFilters | None = None, user_ids: List[int] | None = None):
        self.chat_id = chat_id
        self.query = query
        self.from_event_id = from_event_id
        self.limit = limit
        self.filters = filters
        self.user_ids = user_ids
        self._type = "getChatEventLog"