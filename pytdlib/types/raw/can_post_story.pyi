from .function import Function

from .can_post_story_result_active_story_limit_exceeded import CanPostStoryResultActiveStoryLimitExceeded
from .can_post_story_result_boost_needed import CanPostStoryResultBoostNeeded
from .can_post_story_result_monthly_limit_exceeded import CanPostStoryResultMonthlyLimitExceeded
from .can_post_story_result_ok import CanPostStoryResultOk
from .can_post_story_result_premium_needed import CanPostStoryResultPremiumNeeded
from .can_post_story_result_weekly_limit_exceeded import CanPostStoryResultWeeklyLimitExceeded

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class CanPostStory(Function[CanPostStoryResultOk | CanPostStoryResultPremiumNeeded | CanPostStoryResultBoostNeeded | CanPostStoryResultActiveStoryLimitExceeded | CanPostStoryResultWeeklyLimitExceeded | CanPostStoryResultMonthlyLimitExceeded]):
    """
    Checks whether the current user can post a story on behalf of a chat; requires can_post_stories right for supergroup and channel chats

    :param chat_id: Chat identifier. Pass Saved Messages chat identifier when posting a story on behalf of the current user
    :return: :class:`CanPostStoryResultOk | CanPostStoryResultPremiumNeeded | CanPostStoryResultBoostNeeded | CanPostStoryResultActiveStoryLimitExceeded | CanPostStoryResultWeeklyLimitExceeded | CanPostStoryResultMonthlyLimitExceeded`
    """
    __slots__ = ("chat_id", "_extra", "_client_id", "_type")

    def __init__(self, chat_id: int = 0):
        self.chat_id = chat_id
        self._type = "canPostStory"