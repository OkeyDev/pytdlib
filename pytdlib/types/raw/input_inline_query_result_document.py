from .input_inline_query_result import InputInlineQueryResult

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class InputInlineQueryResultDocument(InputInlineQueryResult):
    """
    Represents a link to a file

    :param id: Unique identifier of the query result
    :param title: Title of the resulting file
    :param description: Represents a link to a file
    :param document_url: URL of the file
    :param mime_type: MIME type of the file content; only "application/pdf" and "application/zip" are currently allowed
    :param thumbnail_url: The URL of the file thumbnail, if it exists
    :param thumbnail_width: Width of the thumbnail
    :param thumbnail_height: Height of the thumbnail
    :param reply_markup: The message reply markup; pass null if none. Must be of type replyMarkupInlineKeyboard or null
    :param input_message_content: The content of the message to be sent. Must be one of the following types: inputMessageText, inputMessageDocument, inputMessageInvoice, inputMessageLocation, inputMessageVenue or inputMessageContact
    """
    __slots__ = ("id", "title", "description", "document_url", "mime_type", "thumbnail_url", "thumbnail_width", "thumbnail_height", "reply_markup", "input_message_content", "_extra", "_client_id", "_type")

    def __init__(self, id = None, title = None, description = None, document_url = None, mime_type = None, thumbnail_url = None, thumbnail_width = None, thumbnail_height = None, reply_markup = None, input_message_content = None):
        self.id = id
        self.title = title
        self.description = description
        self.document_url = document_url
        self.mime_type = mime_type
        self.thumbnail_url = thumbnail_url
        self.thumbnail_width = thumbnail_width
        self.thumbnail_height = thumbnail_height
        self.reply_markup = reply_markup
        self.input_message_content = input_message_content
        self._type = "inputInlineQueryResultDocument"