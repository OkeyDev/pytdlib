from .function import Function

from .gift_for_resale_order import GiftForResaleOrder
from .gifts_for_resale import GiftsForResale
from .upgraded_gift_attribute_id import UpgradedGiftAttributeId
from typing import List

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class SearchGiftsForResale(Function[GiftsForResale]):
    """
    Returns upgraded gifts that can be bought from other owners

    :param gift_id: Identifier of the regular gift that was upgraded to a unique gift
    :param order: Order in which the results will be sorted
    :param attributes: Attributes used to filter received gifts. If multiple attributes of the same type are specified, then all of them are allowed. If none attributes of specific type are specified, then all values for this attribute type are allowed
    :param offset: Offset of the first entry to return as received from the previous request with the same order and attributes; use empty string to get the first chunk of results
    :param limit: The maximum number of gifts to return
    :return: :class:`GiftsForResale`
    """
    __slots__ = ("gift_id", "order", "attributes", "offset", "limit", "_extra", "_client_id", "_type")

    def __init__(self, gift_id: int = 0, order: GiftForResaleOrder | None = None, attributes: List[UpgradedGiftAttributeId] | None = None, offset: str = "", limit: int = 0):
        self.gift_id = gift_id
        self.order = order
        self.attributes = attributes
        self.offset = offset
        self.limit = limit
        self._type = "searchGiftsForResale"