from .message_content import MessageContent

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class MessageUpgradedGift(MessageContent):
    """
    An upgraded gift was received or sent by the current user, or the current user was notified about a channel gift

    :param gift: The gift
    :param sender_id: Sender of the gift; may be null for anonymous gifts
    :param receiver_id: Receiver of the gift
    :param received_gift_id: Unique identifier of the received gift for the current user; only for the receiver of the gift
    :param is_upgrade: True, if the gift was obtained by upgrading of a previously received gift; otherwise, this is a transferred or resold gift
    :param is_saved: True, if the gift is displayed on the user's or the channel's profile page; only for the receiver of the gift
    :param can_be_transferred: True, if the gift can be transferred to another owner; only for the receiver of the gift
    :param was_transferred: True, if the gift was transferred to another owner; only for the receiver of the gift
    :param last_resale_star_count: Number of Telegram Stars that were paid by the sender for the gift; 0 if the gift was upgraded or transferred
    :param transfer_star_count: Number of Telegram Stars that must be paid to transfer the upgraded gift; only for the receiver of the gift
    :param next_transfer_date: Point in time (Unix timestamp) when the gift can be transferred to another owner; 0 if the gift can be transferred immediately or transfer isn't possible; only for the receiver of the gift
    :param next_resale_date: Point in time (Unix timestamp) when the gift can be resold to another user; 0 if the gift can't be resold; only for the receiver of the gift
    :param export_date: Point in time (Unix timestamp) when the gift can be transferred to the TON blockchain as an NFT; 0 if NFT export isn't possible; only for the receiver of the gift
    """
    __slots__ = ("gift", "sender_id", "receiver_id", "received_gift_id", "is_upgrade", "is_saved", "can_be_transferred", "was_transferred", "last_resale_star_count", "transfer_star_count", "next_transfer_date", "next_resale_date", "export_date", "_extra", "_client_id", "_type")

    def __init__(self, gift = None, sender_id = None, receiver_id = None, received_gift_id = None, is_upgrade = None, is_saved = None, can_be_transferred = None, was_transferred = None, last_resale_star_count = None, transfer_star_count = None, next_transfer_date = None, next_resale_date = None, export_date = None):
        self.gift = gift
        self.sender_id = sender_id
        self.receiver_id = receiver_id
        self.received_gift_id = received_gift_id
        self.is_upgrade = is_upgrade
        self.is_saved = is_saved
        self.can_be_transferred = can_be_transferred
        self.was_transferred = was_transferred
        self.last_resale_star_count = last_resale_star_count
        self.transfer_star_count = transfer_star_count
        self.next_transfer_date = next_transfer_date
        self.next_resale_date = next_resale_date
        self.export_date = export_date
        self._type = "messageUpgradedGift"