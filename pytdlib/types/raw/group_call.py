from .object_base import ObjectBase

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class GroupCall(ObjectBase):
    """
    Describes a group call

    :param id: Group call identifier
    :param title: Group call title; for video chats only
    :param invite_link: Invite link for the group call; for group calls that aren't bound to a chat. For video chats call getVideoChatInviteLink to get the link
    :param scheduled_start_date: Point in time (Unix timestamp) when the group call is expected to be started by an administrator; 0 if it is already active or was ended; for video chats only
    :param enabled_start_notification: True, if the group call is scheduled and the current user will receive a notification when the group call starts; for video chats only
    :param is_active: True, if the call is active
    :param is_video_chat: True, if the call is bound to a chat
    :param is_rtmp_stream: True, if the call is an RTMP stream instead of an ordinary video chat; for video chats only
    :param is_joined: True, if the call is joined
    :param need_rejoin: True, if user was kicked from the call because of network loss and the call needs to be rejoined
    :param is_owned: True, if the user is the owner of the call and can end the call, change volume level of other users, or ban users there; for group calls that aren't bound to a chat
    :param can_be_managed: True, if the current user can manage the group call; for video chats only
    :param participant_count: Number of participants in the group call
    :param has_hidden_listeners: True, if group call participants, which are muted, aren't returned in participant list; for video chats only
    :param loaded_all_participants: True, if all group call participants are loaded
    :param recent_speakers: At most 3 recently speaking users in the group call
    :param is_my_video_enabled: True, if the current user's video is enabled
    :param is_my_video_paused: True, if the current user's video is paused
    :param can_enable_video: True, if the current user can broadcast video or share screen
    :param mute_new_participants: True, if only group call administrators can unmute new participants; for video chats only
    :param can_toggle_mute_new_participants: True, if the current user can enable or disable mute_new_participants setting; for video chats only
    :param record_duration: Duration of the ongoing group call recording, in seconds; 0 if none. An updateGroupCall update is not triggered when value of this field changes, but the same recording goes on
    :param is_video_recorded: True, if a video file is being recorded for the call
    :param duration: Call duration, in seconds; for ended calls only
    """
    __slots__ = ("id", "title", "invite_link", "scheduled_start_date", "enabled_start_notification", "is_active", "is_video_chat", "is_rtmp_stream", "is_joined", "need_rejoin", "is_owned", "can_be_managed", "participant_count", "has_hidden_listeners", "loaded_all_participants", "recent_speakers", "is_my_video_enabled", "is_my_video_paused", "can_enable_video", "mute_new_participants", "can_toggle_mute_new_participants", "record_duration", "is_video_recorded", "duration", "_extra", "_client_id", "_type")

    def __init__(self, id = None, title = None, invite_link = None, scheduled_start_date = None, enabled_start_notification = None, is_active = None, is_video_chat = None, is_rtmp_stream = None, is_joined = None, need_rejoin = None, is_owned = None, can_be_managed = None, participant_count = None, has_hidden_listeners = None, loaded_all_participants = None, recent_speakers = None, is_my_video_enabled = None, is_my_video_paused = None, can_enable_video = None, mute_new_participants = None, can_toggle_mute_new_participants = None, record_duration = None, is_video_recorded = None, duration = None):
        self.id = id
        self.title = title
        self.invite_link = invite_link
        self.scheduled_start_date = scheduled_start_date
        self.enabled_start_notification = enabled_start_notification
        self.is_active = is_active
        self.is_video_chat = is_video_chat
        self.is_rtmp_stream = is_rtmp_stream
        self.is_joined = is_joined
        self.need_rejoin = need_rejoin
        self.is_owned = is_owned
        self.can_be_managed = can_be_managed
        self.participant_count = participant_count
        self.has_hidden_listeners = has_hidden_listeners
        self.loaded_all_participants = loaded_all_participants
        self.recent_speakers = recent_speakers
        self.is_my_video_enabled = is_my_video_enabled
        self.is_my_video_paused = is_my_video_paused
        self.can_enable_video = can_enable_video
        self.mute_new_participants = mute_new_participants
        self.can_toggle_mute_new_participants = can_toggle_mute_new_participants
        self.record_duration = record_duration
        self.is_video_recorded = is_video_recorded
        self.duration = duration
        self._type = "groupCall"