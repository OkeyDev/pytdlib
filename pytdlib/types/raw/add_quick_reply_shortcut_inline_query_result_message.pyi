from .function import Function

from .quick_reply_message import QuickReplyMessage

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class AddQuickReplyShortcutInlineQueryResultMessage(Function[QuickReplyMessage]):
    """
    Adds a message to a quick reply shortcut via inline bot. If shortcut doesn't exist and there are less than getOption("quick_reply_shortcut_count_max") shortcuts, then a new shortcut is created. The shortcut must not contain more than getOption("quick_reply_shortcut_message_count_max") messages after adding the new message. Returns the added message

    :param shortcut_name: Name of the target shortcut
    :param reply_to_message_id: Identifier of a quick reply message in the same shortcut to be replied; pass 0 if none
    :param query_id: Identifier of the inline query
    :param result_id: Identifier of the inline query result
    :param hide_via_bot: Pass true to hide the bot, via which the message is sent. Can be used only for bots getOption("animation_search_bot_username"), getOption("photo_search_bot_username"), and getOption("venue_search_bot_username")
    :return: :class:`QuickReplyMessage`
    """
    __slots__ = ("shortcut_name", "reply_to_message_id", "query_id", "result_id", "hide_via_bot", "_extra", "_client_id", "_type")

    def __init__(self, shortcut_name: str = "", reply_to_message_id: int = 0, query_id: int = 0, result_id: str = "", hide_via_bot: bool = False):
        self.shortcut_name = shortcut_name
        self.reply_to_message_id = reply_to_message_id
        self.query_id = query_id
        self.result_id = result_id
        self.hide_via_bot = hide_via_bot
        self._type = "addQuickReplyShortcutInlineQueryResultMessage"