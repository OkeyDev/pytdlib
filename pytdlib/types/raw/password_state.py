from .object_base import ObjectBase

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class PasswordState(ObjectBase):
    """
    Represents the current state of 2-step verification

    :param has_password: True, if a 2-step verification password is set
    :param password_hint: Hint for the password; may be empty
    :param has_recovery_email_address: True, if a recovery email is set
    :param has_passport_data: True, if some Telegram Passport elements were saved
    :param recovery_email_address_code_info: Information about the recovery email address to which the confirmation email was sent; may be null
    :param login_email_address_pattern: Pattern of the email address set up for logging in
    :param pending_reset_date: If not 0, point in time (Unix timestamp) after which the 2-step verification password can be reset immediately using resetPassword
    """
    __slots__ = ("has_password", "password_hint", "has_recovery_email_address", "has_passport_data", "recovery_email_address_code_info", "login_email_address_pattern", "pending_reset_date", "_extra", "_client_id", "_type")

    def __init__(self, has_password = None, password_hint = None, has_recovery_email_address = None, has_passport_data = None, recovery_email_address_code_info = None, login_email_address_pattern = None, pending_reset_date = None):
        self.has_password = has_password
        self.password_hint = password_hint
        self.has_recovery_email_address = has_recovery_email_address
        self.has_passport_data = has_passport_data
        self.recovery_email_address_code_info = recovery_email_address_code_info
        self.login_email_address_pattern = login_email_address_pattern
        self.pending_reset_date = pending_reset_date
        self._type = "passwordState"