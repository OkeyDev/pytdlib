from .function import Function



### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class SearchChatMessages(Function):
    """
    Searches for messages with given words in the chat. Returns the results in reverse chronological order, i.e. in order of decreasing message_id. Cannot be used in secret chats with a non-empty query (searchSecretMessages must be used instead), or without an enabled message database. For optimal performance, the number of returned messages is chosen by TDLib and can be smaller than the specified limit. A combination of query, sender_id, filter and topic_id search criteria is expected to be supported, only if it is required for Telegram official application implementation

    :param chat_id: Identifier of the chat in which to search messages
    :param topic_id: Pass topic identifier to search messages only in specific topic; pass null to search for messages in all topics
    :param query: Query to search for
    :param sender_id: Identifier of the sender of messages to search for; pass null to search for messages from any sender. Not supported in secret chats
    :param from_message_id: Identifier of the message starting from which history must be fetched; use 0 to get results from the last message
    :param offset: Specify 0 to get results from exactly the message from_message_id or a negative offset to get the specified message and some newer messages
    :param limit: The maximum number of messages to be returned; must be positive and can't be greater than 100. If the offset is negative, the limit must be greater than -offset. For optimal performance, the number of returned messages is chosen by TDLib and can be smaller than the specified limit
    :param filter: Additional filter for messages to search; pass null to search for all messages
    :return: :class:`FoundChatMessages`
    """
    __slots__ = ("chat_id", "topic_id", "query", "sender_id", "from_message_id", "offset", "limit", "filter", "_extra", "_client_id", "_type")

    def __init__(self, chat_id = None, topic_id = None, query = None, sender_id = None, from_message_id = None, offset = None, limit = None, filter = None):
        self.chat_id = chat_id
        self.topic_id = topic_id
        self.query = query
        self.sender_id = sender_id
        self.from_message_id = from_message_id
        self.offset = offset
        self.limit = limit
        self.filter = filter
        self._type = "searchChatMessages"