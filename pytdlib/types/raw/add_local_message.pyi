from .function import Function

from .input_message_content import InputMessageContent
from .input_message_reply_to import InputMessageReplyTo
from .message import Message
from .message_sender import MessageSender

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class AddLocalMessage(Function[Message]):
    """
    Adds a local message to a chat. The message is persistent across application restarts only if the message database is used. Returns the added message

    :param chat_id: Target chat; channel direct messages chats aren't supported
    :param sender_id: Identifier of the sender of the message
    :param reply_to: Information about the message or story to be replied; pass null if none
    :param disable_notification: Pass true to disable notification for the message
    :param input_message_content: The content of the message to be added
    :return: :class:`Message`
    """
    __slots__ = ("chat_id", "sender_id", "reply_to", "disable_notification", "input_message_content", "_extra", "_client_id", "_type")

    def __init__(self, chat_id: int = 0, sender_id: MessageSender | None = None, reply_to: InputMessageReplyTo | None = None, disable_notification: bool = False, input_message_content: InputMessageContent | None = None):
        self.chat_id = chat_id
        self.sender_id = sender_id
        self.reply_to = reply_to
        self.disable_notification = disable_notification
        self.input_message_content = input_message_content
        self._type = "addLocalMessage"