from .object_base import ObjectBase

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class ChatAdministratorRights(ObjectBase):
    """
    Describes rights of the administrator

    :param can_manage_chat: True, if the administrator can access the chat event log, get boost list, see hidden supergroup and channel members, report supergroup spam messages, ignore slow mode, and send messages to the chat without paying Telegram Stars. Implied by any other privilege; applicable to supergroups and channels only
    :param can_change_info: True, if the administrator can change the chat title, photo, and other settings
    :param can_post_messages: True, if the administrator can create channel posts, answer to channel direct messages, or view channel statistics; applicable to channels only
    :param can_edit_messages: True, if the administrator can edit messages of other users and pin messages; applicable to channels only
    :param can_delete_messages: True, if the administrator can delete messages of other users
    :param can_invite_users: True, if the administrator can invite new users to the chat
    :param can_restrict_members: True, if the administrator can restrict, ban, or unban chat members or view supergroup statistics; always true for channels
    :param can_pin_messages: True, if the administrator can pin messages; applicable to basic groups and supergroups only
    :param can_manage_topics: True, if the administrator can create, rename, close, reopen, hide, and unhide forum topics; applicable to forum supergroups only
    :param can_promote_members: True, if the administrator can add new administrators with a subset of their own privileges or demote administrators that were directly or indirectly promoted by them
    :param can_manage_video_chats: True, if the administrator can manage video chats
    :param can_post_stories: True, if the administrator can create new chat stories, or edit and delete posted stories; applicable to supergroups and channels only
    :param can_edit_stories: True, if the administrator can edit stories posted by other users, post stories to the chat page, pin chat stories, and access story archive; applicable to supergroups and channels only
    :param can_delete_stories: True, if the administrator can delete stories posted by other users; applicable to supergroups and channels only
    :param is_anonymous: True, if the administrator isn't shown in the chat member list and sends messages anonymously; applicable to supergroups only
    """
    __slots__ = ("can_manage_chat", "can_change_info", "can_post_messages", "can_edit_messages", "can_delete_messages", "can_invite_users", "can_restrict_members", "can_pin_messages", "can_manage_topics", "can_promote_members", "can_manage_video_chats", "can_post_stories", "can_edit_stories", "can_delete_stories", "is_anonymous", "_extra", "_client_id", "_type")

    def __init__(self, can_manage_chat: bool = False, can_change_info: bool = False, can_post_messages: bool = False, can_edit_messages: bool = False, can_delete_messages: bool = False, can_invite_users: bool = False, can_restrict_members: bool = False, can_pin_messages: bool = False, can_manage_topics: bool = False, can_promote_members: bool = False, can_manage_video_chats: bool = False, can_post_stories: bool = False, can_edit_stories: bool = False, can_delete_stories: bool = False, is_anonymous: bool = False):
        self.can_manage_chat = can_manage_chat
        self.can_change_info = can_change_info
        self.can_post_messages = can_post_messages
        self.can_edit_messages = can_edit_messages
        self.can_delete_messages = can_delete_messages
        self.can_invite_users = can_invite_users
        self.can_restrict_members = can_restrict_members
        self.can_pin_messages = can_pin_messages
        self.can_manage_topics = can_manage_topics
        self.can_promote_members = can_promote_members
        self.can_manage_video_chats = can_manage_video_chats
        self.can_post_stories = can_post_stories
        self.can_edit_stories = can_edit_stories
        self.can_delete_stories = can_delete_stories
        self.is_anonymous = is_anonymous
        self._type = "chatAdministratorRights"