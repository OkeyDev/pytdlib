from .function import Function

from .formatted_text import FormattedText
from .input_story_areas import InputStoryAreas
from .input_story_content import InputStoryContent
from .story import Story
from .story_full_id import StoryFullId
from .story_privacy_settings import StoryPrivacySettings

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class PostStory(Function[Story]):
    """
    Posts a new story on behalf of a chat; requires can_post_stories right for supergroup and channel chats. Returns a temporary story

    :param chat_id: Identifier of the chat that will post the story. Pass Saved Messages chat identifier when posting a story on behalf of the current user
    :param content: Content of the story
    :param areas: Clickable rectangle areas to be shown on the story media; pass null if none
    :param caption: Story caption; pass null to use an empty caption; 0-getOption("story_caption_length_max") characters; can have entities only if getOption("can_use_text_entities_in_story_caption")
    :param privacy_settings: The privacy settings for the story; ignored for stories posted on behalf of supergroup and channel chats
    :param active_period: Period after which the story is moved to archive, in seconds; must be one of 6 * 3600, 12 * 3600, 86400, or 2 * 86400 for Telegram Premium users, and 86400 otherwise
    :param from_story_full_id: Full identifier of the original story, which content was used to create the story; pass null if the story isn't repost of another story
    :param is_posted_to_chat_page: Pass true to keep the story accessible after expiration
    :param protect_content: Pass true if the content of the story must be protected from forwarding and screenshotting
    :return: :class:`Story`
    """
    __slots__ = ("chat_id", "content", "areas", "caption", "privacy_settings", "active_period", "from_story_full_id", "is_posted_to_chat_page", "protect_content", "_extra", "_client_id", "_type")

    def __init__(self, chat_id: int = 0, content: InputStoryContent | None = None, areas: InputStoryAreas | None = None, caption: FormattedText | None = None, privacy_settings: StoryPrivacySettings | None = None, active_period: int = 0, from_story_full_id: StoryFullId | None = None, is_posted_to_chat_page: bool = False, protect_content: bool = False):
        self.chat_id = chat_id
        self.content = content
        self.areas = areas
        self.caption = caption
        self.privacy_settings = privacy_settings
        self.active_period = active_period
        self.from_story_full_id = from_story_full_id
        self.is_posted_to_chat_page = is_posted_to_chat_page
        self.protect_content = protect_content
        self._type = "postStory"