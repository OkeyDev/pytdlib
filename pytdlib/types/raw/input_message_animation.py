from .input_message_content import InputMessageContent

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class InputMessageAnimation(InputMessageContent):
    """
    An animation message (GIF-style).

    :param animation: Animation file to be sent
    :param thumbnail: Animation thumbnail; pass null to skip thumbnail uploading
    :param added_sticker_file_ids: File identifiers of the stickers added to the animation, if applicable
    :param duration: Duration of the animation, in seconds
    :param width: Width of the animation; may be replaced by the server
    :param height: Height of the animation; may be replaced by the server
    :param caption: Animation caption; pass null to use an empty caption; 0-getOption("message_caption_length_max") characters
    :param show_caption_above_media: True, if the caption must be shown above the animation; otherwise, the caption must be shown below the animation; not supported in secret chats
    :param has_spoiler: True, if the animation preview must be covered by a spoiler animation; not supported in secret chats
    """
    __slots__ = ("animation", "thumbnail", "added_sticker_file_ids", "duration", "width", "height", "caption", "show_caption_above_media", "has_spoiler", "_extra", "_client_id", "_type")

    def __init__(self, animation = None, thumbnail = None, added_sticker_file_ids = None, duration = None, width = None, height = None, caption = None, show_caption_above_media = None, has_spoiler = None):
        self.animation = animation
        self.thumbnail = thumbnail
        self.added_sticker_file_ids = added_sticker_file_ids
        self.duration = duration
        self.width = width
        self.height = height
        self.caption = caption
        self.show_caption_above_media = show_caption_above_media
        self.has_spoiler = has_spoiler
        self._type = "inputMessageAnimation"