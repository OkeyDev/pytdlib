from .object_base import ObjectBase

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class RemoteFile(ObjectBase):
    """
    Represents a remote file

    :param id: Remote file identifier; may be empty. Can be used by the current user across application restarts or even from other devices. Uniquely identifies a file, but a file can have a lot of different valid identifiers. If the identifier starts with "http://" or "https://", it represents the HTTP URL of the file. TDLib is currently unable to download files if only their URL is known. If downloadFile/addFileToDownloads is called on such a file or if it is sent to a secret chat, TDLib starts a file generation process by sending updateFileGenerationStart to the application with the HTTP URL in the original_path and "#url#" as the conversion string. Application must generate the file by downloading it to the specified location
    :param unique_id: Unique file identifier; may be empty if unknown. The unique file identifier which is the same for the same file even for different users and is persistent over time
    :param is_uploading_active: True, if the file is currently being uploaded (or a remote copy is being generated by some other means)
    :param is_uploading_completed: True, if a remote copy is fully available
    :param uploaded_size: Size of the remote available part of the file, in bytes; 0 if unknown
    """
    __slots__ = ("id", "unique_id", "is_uploading_active", "is_uploading_completed", "uploaded_size", "_extra", "_client_id", "_type")

    def __init__(self, id = None, unique_id = None, is_uploading_active = None, is_uploading_completed = None, uploaded_size = None):
        self.id = id
        self.unique_id = unique_id
        self.is_uploading_active = is_uploading_active
        self.is_uploading_completed = is_uploading_completed
        self.uploaded_size = uploaded_size
        self._type = "remoteFile"