from .location import Location
from .message_content import MessageContent

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class MessageLocation(MessageContent):
    """
    A message with a location

    :param location: The location description
    :param live_period: Time relative to the message send date, for which the location can be updated, in seconds; if 0x7FFFFFFF, then location can be updated forever
    :param expires_in: Left time for which the location can be updated, in seconds. If 0, then the location can't be updated anymore. The update updateMessageContent is not sent when this field changes
    :param heading: For live locations, a direction in which the location moves, in degrees; 1-360. If 0 the direction is unknown
    :param proximity_alert_radius: For live locations, a maximum distance to another chat member for proximity alerts, in meters (0-100000). 0 if the notification is disabled. Available only to the message sender
    """
    __slots__ = ("location", "live_period", "expires_in", "heading", "proximity_alert_radius", "_extra", "_client_id", "_type")

    def __init__(self, location: Location | None = None, live_period: int = 0, expires_in: int = 0, heading: int = 0, proximity_alert_radius: int = 0):
        self.location = location
        self.live_period = live_period
        self.expires_in = expires_in
        self.heading = heading
        self.proximity_alert_radius = proximity_alert_radius
        self._type = "messageLocation"