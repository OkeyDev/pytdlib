from .forum_topic_icon import ForumTopicIcon
from .message_sender import MessageSender
from .object_base import ObjectBase

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class ForumTopicInfo(ObjectBase):
    """
    Contains basic information about a forum topic

    :param chat_id: Identifier of the forum chat to which the topic belongs
    :param forum_topic_id: Forum topic identifier of the topic
    :param message_thread_id: Message thread identifier of the topic
    :param name: Name of the topic
    :param icon: Icon of the topic
    :param creation_date: Point in time (Unix timestamp) when the topic was created
    :param creator_id: Identifier of the creator of the topic
    :param is_general: True, if the topic is the General topic list
    :param is_outgoing: True, if the topic was created by the current user
    :param is_closed: True, if the topic is closed
    :param is_hidden: True, if the topic is hidden above the topic list and closed; for General topic only
    """
    __slots__ = ("chat_id", "forum_topic_id", "message_thread_id", "name", "icon", "creation_date", "creator_id", "is_general", "is_outgoing", "is_closed", "is_hidden", "_extra", "_client_id", "_type")

    def __init__(self, chat_id: int = 0, forum_topic_id: int = 0, message_thread_id: int = 0, name: str = "", icon: ForumTopicIcon | None = None, creation_date: int = 0, creator_id: MessageSender | None = None, is_general: bool = False, is_outgoing: bool = False, is_closed: bool = False, is_hidden: bool = False):
        self.chat_id = chat_id
        self.forum_topic_id = forum_topic_id
        self.message_thread_id = message_thread_id
        self.name = name
        self.icon = icon
        self.creation_date = creation_date
        self.creator_id = creator_id
        self.is_general = is_general
        self.is_outgoing = is_outgoing
        self.is_closed = is_closed
        self.is_hidden = is_hidden
        self._type = "forumTopicInfo"