from .function import Function

from .input_message_content import InputMessageContent
from .input_message_reply_to import InputMessageReplyTo
from .message_send_options import MessageSendOptions
from .messages import Messages
from typing import List

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class SendMessageAlbum(Function[Messages]):
    """
    Sends 2-10 messages grouped together into an album. Currently, only audio, document, photo and video messages can be grouped into an album. Documents and audio files can be only grouped in an album with messages of the same type. Returns sent messages

    :param chat_id: Target chat
    :param message_thread_id: If not 0, the message thread identifier in which the messages will be sent
    :param reply_to: Information about the message or story to be replied; pass null if none
    :param options: Options to be used to send the messages; pass null to use default options
    :param input_message_contents: Contents of messages to be sent. At most 10 messages can be added to an album. All messages must have the same value of show_caption_above_media
    :return: :class:`Messages`
    """
    __slots__ = ("chat_id", "message_thread_id", "reply_to", "options", "input_message_contents", "_extra", "_client_id", "_type")

    def __init__(self, chat_id: int = 0, message_thread_id: int = 0, reply_to: InputMessageReplyTo | None = None, options: MessageSendOptions | None = None, input_message_contents: List[InputMessageContent] | None = None):
        self.chat_id = chat_id
        self.message_thread_id = message_thread_id
        self.reply_to = reply_to
        self.options = options
        self.input_message_contents = input_message_contents
        self._type = "sendMessageAlbum"