from .group_call_participant_video_info import GroupCallParticipantVideoInfo
from .message_sender import MessageSender
from .object_base import ObjectBase

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class GroupCallParticipant(ObjectBase):
    """
    Represents a group call participant

    :param participant_id: Identifier of the group call participant
    :param audio_source_id: User's audio channel synchronization source identifier
    :param screen_sharing_audio_source_id: User's screen sharing audio channel synchronization source identifier
    :param video_info: Information about user's video channel; may be null if there is no active video
    :param screen_sharing_video_info: Information about user's screen sharing video channel; may be null if there is no active screen sharing video
    :param bio: The participant user's bio or the participant chat's description
    :param is_current_user: True, if the participant is the current user
    :param is_speaking: True, if the participant is speaking as set by setGroupCallParticipantIsSpeaking
    :param is_hand_raised: True, if the participant hand is raised
    :param can_be_muted_for_all_users: True, if the current user can mute the participant for all other group call participants
    :param can_be_unmuted_for_all_users: True, if the current user can allow the participant to unmute themselves or unmute the participant (if the participant is the current user)
    :param can_be_muted_for_current_user: True, if the current user can mute the participant only for self
    :param can_be_unmuted_for_current_user: True, if the current user can unmute the participant for self
    :param is_muted_for_all_users: True, if the participant is muted for all users
    :param is_muted_for_current_user: True, if the participant is muted for the current user
    :param can_unmute_self: True, if the participant is muted for all users, but can unmute themselves
    :param volume_level: Participant's volume level; 1-20000 in hundreds of percents
    :param order: User's order in the group call participant list. Orders must be compared lexicographically. The bigger is order, the higher is user in the list. If order is empty, the user must be removed from the participant list
    """
    __slots__ = ("participant_id", "audio_source_id", "screen_sharing_audio_source_id", "video_info", "screen_sharing_video_info", "bio", "is_current_user", "is_speaking", "is_hand_raised", "can_be_muted_for_all_users", "can_be_unmuted_for_all_users", "can_be_muted_for_current_user", "can_be_unmuted_for_current_user", "is_muted_for_all_users", "is_muted_for_current_user", "can_unmute_self", "volume_level", "order", "_extra", "_client_id", "_type")

    def __init__(self, participant_id: MessageSender | None = None, audio_source_id: int = 0, screen_sharing_audio_source_id: int = 0, video_info: GroupCallParticipantVideoInfo | None = None, screen_sharing_video_info: GroupCallParticipantVideoInfo | None = None, bio: str = "", is_current_user: bool = False, is_speaking: bool = False, is_hand_raised: bool = False, can_be_muted_for_all_users: bool = False, can_be_unmuted_for_all_users: bool = False, can_be_muted_for_current_user: bool = False, can_be_unmuted_for_current_user: bool = False, is_muted_for_all_users: bool = False, is_muted_for_current_user: bool = False, can_unmute_self: bool = False, volume_level: int = 0, order: str = ""):
        self.participant_id = participant_id
        self.audio_source_id = audio_source_id
        self.screen_sharing_audio_source_id = screen_sharing_audio_source_id
        self.video_info = video_info
        self.screen_sharing_video_info = screen_sharing_video_info
        self.bio = bio
        self.is_current_user = is_current_user
        self.is_speaking = is_speaking
        self.is_hand_raised = is_hand_raised
        self.can_be_muted_for_all_users = can_be_muted_for_all_users
        self.can_be_unmuted_for_all_users = can_be_unmuted_for_all_users
        self.can_be_muted_for_current_user = can_be_muted_for_current_user
        self.can_be_unmuted_for_current_user = can_be_unmuted_for_current_user
        self.is_muted_for_all_users = is_muted_for_all_users
        self.is_muted_for_current_user = is_muted_for_current_user
        self.can_unmute_self = can_unmute_self
        self.volume_level = volume_level
        self.order = order
        self._type = "groupCallParticipant"