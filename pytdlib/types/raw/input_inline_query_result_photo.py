from .input_inline_query_result import InputInlineQueryResult

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class InputInlineQueryResultPhoto(InputInlineQueryResult):
    """
    Represents link to a JPEG image

    :param id: Unique identifier of the query result
    :param title: Title of the result, if known
    :param description: Represents link to a JPEG image
    :param thumbnail_url: URL of the photo thumbnail, if it exists
    :param photo_url: The URL of the JPEG photo (photo size must not exceed 5MB)
    :param photo_width: Width of the photo
    :param photo_height: Height of the photo
    :param reply_markup: The message reply markup; pass null if none. Must be of type replyMarkupInlineKeyboard or null
    :param input_message_content: The content of the message to be sent. Must be one of the following types: inputMessageText, inputMessagePhoto, inputMessageInvoice, inputMessageLocation, inputMessageVenue or inputMessageContact
    """
    __slots__ = ("id", "title", "description", "thumbnail_url", "photo_url", "photo_width", "photo_height", "reply_markup", "input_message_content", "_extra", "_client_id", "_type")

    def __init__(self, id = None, title = None, description = None, thumbnail_url = None, photo_url = None, photo_width = None, photo_height = None, reply_markup = None, input_message_content = None):
        self.id = id
        self.title = title
        self.description = description
        self.thumbnail_url = thumbnail_url
        self.photo_url = photo_url
        self.photo_width = photo_width
        self.photo_height = photo_height
        self.reply_markup = reply_markup
        self.input_message_content = input_message_content
        self._type = "inputInlineQueryResultPhoto"