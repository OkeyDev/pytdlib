from .object_base import ObjectBase
from .outline import Outline
from .sticker import Sticker
from .sticker_type import StickerType
from .thumbnail import Thumbnail
from typing import List

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class StickerSetInfo(ObjectBase):
    """
    Represents short information about a sticker set

    :param id: Identifier of the sticker set
    :param title: Title of the sticker set
    :param name: Name of the sticker set
    :param thumbnail: Sticker set thumbnail in WEBP, TGS, or WEBM format with width and height 100; may be null. The file can be downloaded only before the thumbnail is changed
    :param thumbnail_outline: Sticker set thumbnail's outline; may be null if unknown
    :param is_owned: True, if the sticker set is owned by the current user
    :param is_installed: True, if the sticker set has been installed by the current user
    :param is_archived: True, if the sticker set has been archived. A sticker set can't be installed and archived simultaneously
    :param is_official: True, if the sticker set is official
    :param sticker_type: Type of the stickers in the set
    :param needs_repainting: True, if stickers in the sticker set are custom emoji that must be repainted; for custom emoji sticker sets only
    :param is_allowed_as_chat_emoji_status: True, if stickers in the sticker set are custom emoji that can be used as chat emoji status; for custom emoji sticker sets only
    :param is_viewed: True for already viewed trending sticker sets
    :param size: Total number of stickers in the set
    :param covers: Up to the first 5 stickers from the set, depending on the context. If the application needs more stickers the full sticker set needs to be requested
    """
    __slots__ = ("id", "title", "name", "thumbnail", "thumbnail_outline", "is_owned", "is_installed", "is_archived", "is_official", "sticker_type", "needs_repainting", "is_allowed_as_chat_emoji_status", "is_viewed", "size", "covers", "_extra", "_client_id", "_type")

    def __init__(self, id: int = 0, title: str = "", name: str = "", thumbnail: Thumbnail | None = None, thumbnail_outline: Outline | None = None, is_owned: bool = False, is_installed: bool = False, is_archived: bool = False, is_official: bool = False, sticker_type: StickerType | None = None, needs_repainting: bool = False, is_allowed_as_chat_emoji_status: bool = False, is_viewed: bool = False, size: int = 0, covers: List[Sticker] | None = None):
        self.id = id
        self.title = title
        self.name = name
        self.thumbnail = thumbnail
        self.thumbnail_outline = thumbnail_outline
        self.is_owned = is_owned
        self.is_installed = is_installed
        self.is_archived = is_archived
        self.is_official = is_official
        self.sticker_type = sticker_type
        self.needs_repainting = needs_repainting
        self.is_allowed_as_chat_emoji_status = is_allowed_as_chat_emoji_status
        self.is_viewed = is_viewed
        self.size = size
        self.covers = covers
        self._type = "stickerSetInfo"