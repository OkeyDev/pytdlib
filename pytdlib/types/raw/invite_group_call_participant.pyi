from .function import Function

from .invite_group_call_participant_result_success import InviteGroupCallParticipantResultSuccess
from .invite_group_call_participant_result_user_already_participant import InviteGroupCallParticipantResultUserAlreadyParticipant
from .invite_group_call_participant_result_user_privacy_restricted import InviteGroupCallParticipantResultUserPrivacyRestricted
from .invite_group_call_participant_result_user_was_banned import InviteGroupCallParticipantResultUserWasBanned

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class InviteGroupCallParticipant(Function[InviteGroupCallParticipantResultUserPrivacyRestricted | InviteGroupCallParticipantResultUserAlreadyParticipant | InviteGroupCallParticipantResultUserWasBanned | InviteGroupCallParticipantResultSuccess]):
    """
    Invites a user to an active group call; for group calls not bound to a chat only. Sends a service message of the type messageGroupCall. The group call can have at most getOption("group_call_participant_count_max") participants

    :param group_call_id: Group call identifier
    :param user_id: User identifier
    :param is_video: Pass true if the group call is a video call
    :return: :class:`InviteGroupCallParticipantResultUserPrivacyRestricted | InviteGroupCallParticipantResultUserAlreadyParticipant | InviteGroupCallParticipantResultUserWasBanned | InviteGroupCallParticipantResultSuccess`
    """
    __slots__ = ("group_call_id", "user_id", "is_video", "_extra", "_client_id", "_type")

    def __init__(self, group_call_id: int = 0, user_id: int = 0, is_video: bool = False):
        self.group_call_id = group_call_id
        self.user_id = user_id
        self.is_video = is_video
        self._type = "inviteGroupCallParticipant"