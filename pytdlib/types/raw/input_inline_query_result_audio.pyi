from .input_inline_query_result import InputInlineQueryResult
from .input_message_content import InputMessageContent
from .reply_markup import ReplyMarkup

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class InputInlineQueryResultAudio(InputInlineQueryResult):
    """
    Represents a link to an MP3 audio file

    :param id: Unique identifier of the query result
    :param title: Title of the audio file
    :param performer: Performer of the audio file
    :param audio_url: The URL of the audio file
    :param audio_duration: Audio file duration, in seconds
    :param reply_markup: The message reply markup; pass null if none. Must be of type replyMarkupInlineKeyboard or null
    :param input_message_content: The content of the message to be sent. Must be one of the following types: inputMessageText, inputMessageAudio, inputMessageInvoice, inputMessageLocation, inputMessageVenue or inputMessageContact
    """
    __slots__ = ("id", "title", "performer", "audio_url", "audio_duration", "reply_markup", "input_message_content", "_extra", "_client_id", "_type")

    def __init__(self, id: str = "", title: str = "", performer: str = "", audio_url: str = "", audio_duration: int = 0, reply_markup: ReplyMarkup | None = None, input_message_content: InputMessageContent | None = None):
        self.id = id
        self.title = title
        self.performer = performer
        self.audio_url = audio_url
        self.audio_duration = audio_duration
        self.reply_markup = reply_markup
        self.input_message_content = input_message_content
        self._type = "inputInlineQueryResultAudio"