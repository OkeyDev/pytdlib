from .message_content import MessageContent
from .message_sending_state import MessageSendingState
from .object_base import ObjectBase
from .reply_markup import ReplyMarkup

### FILE IS AUTOGENERATED. DO NO EDIT IT BY HAND ###

class QuickReplyMessage(ObjectBase):
    """
    Describes a message that can be used for quick reply

    :param id: Unique message identifier among all quick replies
    :param sending_state: The sending state of the message; may be null if the message isn't being sent and didn't fail to be sent
    :param can_be_edited: True, if the message can be edited
    :param reply_to_message_id: The identifier of the quick reply message to which the message replies; 0 if none
    :param via_bot_user_id: If non-zero, the user identifier of the bot through which this message was sent
    :param media_album_id: Unique identifier of an album this message belongs to; 0 if none. Only audios, documents, photos and videos can be grouped together in albums
    :param content: Content of the message
    :param reply_markup: Inline keyboard reply markup for the message; may be null if none
    """
    __slots__ = ("id", "sending_state", "can_be_edited", "reply_to_message_id", "via_bot_user_id", "media_album_id", "content", "reply_markup", "_extra", "_client_id", "_type")

    def __init__(self, id: int = 0, sending_state: MessageSendingState | None = None, can_be_edited: bool = False, reply_to_message_id: int = 0, via_bot_user_id: int = 0, media_album_id: int = 0, content: MessageContent | None = None, reply_markup: ReplyMarkup | None = None):
        self.id = id
        self.sending_state = sending_state
        self.can_be_edited = can_be_edited
        self.reply_to_message_id = reply_to_message_id
        self.via_bot_user_id = via_bot_user_id
        self.media_album_id = media_album_id
        self.content = content
        self.reply_markup = reply_markup
        self._type = "quickReplyMessage"